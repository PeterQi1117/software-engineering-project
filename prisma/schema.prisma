// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {  
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          String   @id @default(cuid())
  firstName   String?
  lastName    String?
  address     String?
  phoneNumber String?
  email       String?  @unique
  parentId    Int?
  parent      Parent?  @relation(fields: [parentId], references: [id])
  teacherId   Int?
  teacher     Teacher? @relation(fields: [teacherId], references: [id])
}

model Facility {
  id               Int             @id @default(autoincrement())
  name             String
  address          String
  phoneNumber      String
  adminName        String
  adminEmail       String          @unique
  adminPhoneNumber String
  licenseNumber    String
  classrooms       Classroom[]
  teachers         Teacher[]
  facilityAdmins   FacilityAdmin[]
}

model Child {
  id          Int          @id @default(autoincrement())
  firstName   String
  lastName    String
  dateOfBirth DateTime
  allergies   String?
  parentId    Int
  parent      Parent       @relation(fields: [parentId], references: [id])
  classroomId Int?
  classroom   Classroom?   @relation(fields: [classroomId], references: [id])
  attendances Attendance[]
}

model FacilityAdmin {
  id         Int      @id @default(autoincrement())
  facilityId Int
  facility   Facility @relation(fields: [facilityId], references: [id])
}

model Parent {
  id       Int     @id @default(autoincrement())
  children Child[]
  userId   String  @unique
  User     User[]
}

model Teacher {
  id           Int          @id @default(autoincrement())
  hourlySalary Float
  facilityId   Int?
  facility     Facility?    @relation(fields: [facilityId], references: [id])
  classroom    Classroom?
  attendances  Attendance[]
  userId       String       @unique
  User         User[]
}

model Classroom {
  id         Int           @id @default(autoincrement())
  type       ClassroomType
  capacity   Int
  tuitionFee Float
  facilityId Int
  facility   Facility      @relation(fields: [facilityId], references: [id])
  teacherId  Int?          @unique
  teacher    Teacher?      @relation(fields: [teacherId], references: [id])
  children   Child[]
}

enum ClassroomType {
  Infant
  Toddler
  Twaddler
  ThreeYearsOld
  FourYearsOld
}

model Attendance {
  id        Int            @id @default(autoincrement())
  date      DateTime
  time      DateTime
  type      AttendanceType
  childId   Int?
  child     Child?         @relation(fields: [childId], references: [id])
  teacherId Int?
  teacher   Teacher?       @relation(fields: [teacherId], references: [id])
}

enum AttendanceType {
  SignIn
  SignOut
}
