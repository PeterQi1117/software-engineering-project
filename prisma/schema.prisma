// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id @default(cuid())
  firstName     String?
  lastName      String?
  address       String?
  phoneNumber   String?
  email         String?   @unique
  parentId      Int?
  teacherId     Int?
}

model Facility {
  id               Int         @id @default(autoincrement())
  name             String
  address          String
  phoneNumber      String
  adminName        String
  adminEmail       String      @unique
  adminPhoneNumber String
  licenseNumber    String
  classrooms       Classroom[]
  teachers         Teacher[]
}

model Child {
  id          Int                   @id @default(autoincrement())
  firstName   String
  lastName    String
  dateOfBirth DateTime
  allergies   String?
  parentId    Int
  parent      Parent                @relation(fields: [parentId], references: [id])
  enrollments ClassroomEnrollment[]
  attendances Attendance[]
}

model Parent {
  id          Int     @id @default(autoincrement())
  children    Child[]
}

model Teacher {
  id           Int                @id @default(autoincrement())
  hourlySalary Float
  facilityId   Int?
  facility     Facility?          @relation(fields: [facilityId], references: [id])
  classrooms   ClassroomTeacher[]
  attendances  Attendance[]
}

model Classroom {
  id          Int                   @id @default(autoincrement())
  type        ClassroomType
  capacity    Int
  tuitionFee  Float
  facilityId  Int
  facility    Facility              @relation(fields: [facilityId], references: [id])
  enrollments ClassroomEnrollment[]
  teachers    ClassroomTeacher[]
}

enum ClassroomType {
  Infant
  Toddler
  Twaddler
  ThreeYearsOld
  FourYearsOld
}

model Attendance {
  id        Int            @id @default(autoincrement())
  date      DateTime
  time      DateTime
  type      AttendanceType
  childId   Int?
  child     Child?         @relation(fields: [childId], references: [id])
  teacherId Int?
  teacher   Teacher?       @relation(fields: [teacherId], references: [id])
}

enum AttendanceType {
  SignIn
  SignOut
}

model ClassroomEnrollment {
  childId     Int
  child       Child     @relation(fields: [childId], references: [id])
  classroomId Int
  classroom   Classroom @relation(fields: [classroomId], references: [id])

  @@id([childId, classroomId])
}

model ClassroomTeacher {
  teacherId   Int
  teacher     Teacher   @relation(fields: [teacherId], references: [id])
  classroomId Int
  classroom   Classroom @relation(fields: [classroomId], references: [id])

  @@id([teacherId, classroomId])
}
